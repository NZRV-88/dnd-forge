import React from 'react';
import { Button } from '@/components/ui/button';
import { Collapsible, CollapsibleContent, CollapsibleTrigger } from '@/components/ui/collapsible';
import { Shield, ChevronDown, Loader2 } from 'lucide-react';
import { useCharacter } from '@/store/character';

interface AuraManagerProps {
  level: number;
  frameColor?: string;
}

export default function AuraManager({ level, frameColor = '#3B82F6' }: AuraManagerProps) {
  const characterContext = useCharacter();
  
  if (!characterContext) {
    return null;
  }
  
  const { draft } = characterContext;
  const [isExpanded, setIsExpanded] = React.useState(false);
  const [isActivating, setIsActivating] = React.useState(false);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞—É—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è
  const availableAuras = [];
  
  if (level >= 6) {
    availableAuras.push({
      name: '–ê—É—Ä–∞ –∑–∞—â–∏—Ç—ã',
      level: 6,
      radius: level >= 18 ? 30 : 10,
      description: '–í—ã –∏ –≤–∞—à–∏ —Å–æ—é–∑–Ω–∏–∫–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ –¥–µ–π—Å—Ç–≤–∏—è –∞—É—Ä—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –±–æ–Ω—É—Å –∫ —Å–ø–∞—Å–±—Ä–æ—Å–∫–∞–º, —Ä–∞–≤–Ω—ã–π –≤–∞—à–µ–º—É –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É –•–∞—Ä–∏–∑–º—ã (–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å +1).',
      icon: 'üõ°Ô∏è'
    });
  }
  
  if (level >= 10) {
    availableAuras.push({
      name: '–ê—É—Ä–∞ –æ—Ç–≤–∞–≥–∏',
      level: 10,
      radius: level >= 18 ? 30 : 10,
      description: '–í—ã –∏ –≤–∞—à–∏ —Å–æ—é–∑–Ω–∏–∫–∏ –≤ –≤–∞—à–µ–π –ê—É—Ä–µ –ó–∞—â–∏—Ç—ã –æ–±–ª–∞–¥–∞–µ—Ç–µ –ò–º–º—É–Ω–∏—Ç–µ—Ç–æ–º –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é –ò—Å–ø—É–≥–∞–Ω–Ω—ã–π. –ï—Å–ª–∏ —Å–æ—é–∑–Ω–∏–∫ —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ò—Å–ø—É–≥–∞–Ω–Ω—ã–π –≤—Ö–æ–¥–∏—Ç –≤ –∞—É—Ä—É, —Ç–æ —ç—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ –∏–º–µ–µ—Ç –Ω–∞ –Ω–µ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞, –ø–æ–∫–∞ –æ–Ω —Ç–∞–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è.',
      icon: 'üí™'
    });
  }

  const handleActivateAura = () => {
    setIsActivating(true);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞—É—Ä—ã
    setTimeout(() => setIsActivating(false), 1000);
  };

  if (availableAuras.length === 0) {
    return null;
  }

  return (
    <div className="bg-neutral-800 rounded-lg p-4">
      <Collapsible open={isExpanded} onOpenChange={setIsExpanded}>
        <CollapsibleTrigger asChild>
          <Button
            variant="ghost"
            className="w-full justify-between p-0 h-auto hover:bg-transparent"
          >
            <div className="flex items-center gap-3">
              <div 
                className="w-8 h-8 rounded-full flex items-center justify-center text-white font-bold text-sm"
                style={{ backgroundColor: frameColor }}
              >
                üõ°Ô∏è
              </div>
              <div className="text-left">
                <h4 className="text-sm font-semibold text-white">–ê–£–†–ê –ü–ê–õ–ê–î–ò–ù–ê</h4>
                <p className="text-xs text-gray-400">
                  {level >= 18 ? '–†–∞–¥–∏—É—Å 30 —Ñ—É—Ç–æ–≤' : level >= 6 ? '–†–∞–¥–∏—É—Å 10 —Ñ—É—Ç–æ–≤' : '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞'}
                </p>
              </div>
            </div>
            <ChevronDown 
              className={`w-4 h-4 text-gray-400 transition-transform ${
                isExpanded ? 'rotate-180' : ''
              }`} 
            />
          </Button>
        </CollapsibleTrigger>
        
        <CollapsibleContent className="mt-4">
          <div className="space-y-4">
            {/* –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞—É—Ä–µ */}
            <div className="bg-neutral-700 rounded-lg p-3">
              <h5 className="text-sm font-medium text-white mb-2">–û–±—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –∞—É—Ä—ã</h5>
              <ul className="text-xs text-gray-400 space-y-1">
                <li>‚Ä¢ –ê—É—Ä–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞, –ø–æ–∫–∞ —É –≤–∞—Å –µ—Å—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ù–µ–¥–µ–µ—Å–ø–æ—Å–æ–±–Ω—ã–π</li>
                <li>‚Ä¢ –ö–∞–∂–¥–æ–µ —Å—É—â–µ—Å—Ç–≤–æ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –±–æ–Ω—É—Å —Ç–æ–ª—å–∫–æ –æ—Ç –æ–¥–Ω–æ–π –ê—É—Ä—ã –∑–∞—â–∏—Ç—ã –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ</li>
                <li>‚Ä¢ –ï—Å–ª–∏ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ –¥–µ–π—Å—Ç–≤—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞—É—Ä, –æ–Ω–æ –≤—ã–±–∏—Ä–∞–µ—Ç, –∫–∞–∫–∞—è –∏–∑ –Ω–∏—Ö –æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç</li>
                {level >= 18 && (
                  <li>‚Ä¢ <strong className="text-yellow-400">–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∞—É—Ä—ã:</strong> –†–∞–¥–∏—É—Å —É–≤–µ–ª–∏—á–µ–Ω –¥–æ 30 —Ñ—É—Ç–æ–≤</li>
                )}
              </ul>
            </div>

            {/* –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞—É—Ä—ã */}
            <div className="space-y-3">
              {availableAuras.map((aura, index) => (
                <div key={index} className="bg-neutral-700 rounded-lg p-3">
                  <div className="flex items-start gap-3">
                    <div className="text-2xl">{aura.icon}</div>
                    <div className="flex-1">
                      <div className="flex items-center gap-2 mb-1">
                        <h6 className="text-sm font-medium text-white">{aura.name}</h6>
                        <span className="text-xs text-gray-500">(–£—Ä–æ–≤–µ–Ω—å {aura.level})</span>
                        <span className="text-xs text-blue-400">–†–∞–¥–∏—É—Å {aura.radius} —Ñ—É—Ç–æ–≤</span>
                      </div>
                      <p className="text-xs text-gray-400">{aura.description}</p>
                    </div>
                  </div>
                </div>
              ))}
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ */}
            <Button
              onClick={handleActivateAura}
              disabled={isActivating}
              className="w-full"
              style={{
                backgroundColor: frameColor,
                color: 'white',
                border: `1px solid ${frameColor}`
              }}
            >
              {isActivating ? (
                <Loader2 className="w-4 h-4 animate-spin mr-2" />
              ) : (
                <Shield className="w-4 h-4 mr-2" />
              )}
              {isActivating ? '–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è...' : '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∞—É—Ä—É'}
            </Button>
          </div>
        </CollapsibleContent>
      </Collapsible>
    </div>
  );
}
